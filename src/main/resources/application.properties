application.name=@project.artifactId@
build.version=@project.version@
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.port=${REDIS_PORT}
spring.redis.ssl=${REDIS_SSL_ENABLED}
spring.data.redis.repositories.type=none
spring.jackson.default-property-inclusion=non_null
logging.level.web=${WEB_LOGGING_LEVEL:off}
logging.level.it.pagopa=${SERVICE_LOGGING_LEVEL:info}

nodo.hostname=${NODO_HOSTNAME}
nodo.nodeforpsp.uri=${NODE_FOR_PSP_URI}
nodo.nodoperpm.uri=${NODO_PER_PM_URI}
nodo.readTimeout=${NODO_READ_TIMEOUT}
nodo.connectionTimeout=${NODO_CONNECTION_TIMEOUT}
nodo.connection.string=${NODO_CONNECTION_STRING}
nodo.parallelRequests=${NODO_PARALLEL_REQUESTS}
nodo.allCCPOnTransferIbanEnabled=${NODO_ALL_CCP_ON_TRANSFER_IBAN_ENABLED}
nodo.ecommerce.clientId=${NODO_ECOMMERCE_CLIENT_ID}

paymentTransactionsGateway.uri=${PAYMENT_TRANSACTIONS_GATEWAY_URI}/
paymentTransactionsGateway.readTimeout=${PAYMENT_TRANSACTIONS_GATEWAY_READ_TIMEOUT}
paymentTransactionsGateway.connectionTimeout=${PAYMENT_TRANSACTIONS_GATEWAY_CONNECTION_TIMEOUT}
paymentTransactionsGateway.apiKey=${PAYMENT_TRANSACTIONS_GATEWAY_API_KEY}

ecommercePaymentMethods.uri=${ECOMMERCE_PAYMENT_METHODS_URI}
ecommercePaymentMethods.readTimeout=${ECOMMERCE_PAYMENT_METHODS_READ_TIMEOUT}
ecommercePaymentMethods.connectionTimeout=${ECOMMERCE_PAYMENT_METHODS_CONNECTION_TIMEOUT}
ecommercePaymentMethods.apiKey=${ECOMMERCE_PAYMENT_METHODS_APY_KEY}

wallet.uri=${WALLET_URI}
wallet.readTimeout=${WALLET_READ_TIMEOUT}
wallet.connectionTimeout=${WALLET_CONNECTION_TIMEOUT}
wallet.apiKey=${WALLET_API_KEY}

notificationsService.uri=${NOTIFICATIONS_SERVICE_URI}
notificationsService.readTimeout=${NOTIFICATIONS_SERVICE_READ_TIMEOUT}
notificationsService.connectionTimeout=${NOTIFICATIONS_SERVICE_CONNECTION_TIMEOUT}
notificationsService.apiKey=${NOTIFICATIONS_SERVICE_API_KEY}

spring.data.mongodb.uri=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/?ssl=${MONGO_SSL_ENABLED}&readPreference=primaryPreferred&maxStalenessSeconds=90
spring.data.mongodb.database=ecommerce

management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

azurestorage.connectionstringtransient=${ECOMMERCE_STORAGE_TRANSIENT_CONNECTION_STRING}
azurestorage.queues.transactionexpiration.name=${TRANSACTION_EXPIRATION_QUEUE_NAME}
azurestorage.queues.transactionrefund.name=${TRANSACTION_REFUND_QUEUE_NAME}
azurestorage.queues.transactionclosepaymentretry.name=${TRANSACTION_CLOSE_PAYMENT_RETRY_QUEUE_NAME}
azurestorage.queues.transactionclosepayment.name=${TRANSACTION_CLOSE_PAYMENT_QUEUE_NAME}
azurestorage.queues.transactionnotificationrequested.name=${TRANSACTION_NOTIFICATIONS_QUEUE_NAME}
azurestorage.queues.transactionauthorizationrequested.name=${TRANSACTIONS_AUTHORIZATION_REQUESTED_QUEUE_NAME}
azurestorage.queues.transientQueues.ttlSeconds=${TRANSIENT_QUEUES_TTL_SECONDS:604800}

spring.devtools.restart.enabled=false
server.error.include-stacktrace=${SERVER_ERROR_INCLUDE_STACKTRACE:never}

payment.token.validity=${PAYMENT_TOKEN_VALIDITY_TIME}
transactions.ecommerce.retry.offset=${TRANSACTIONS_RETRY_OFFSET}

transactions.closure_handler.retry_interval=${CLOSURE_RETRY_INTERVAL}

jwt.ecommerce.secretKey=${JWT_ECOMMERCE_SECRET}
npg.notification.jwt.secret=${JWT_NPG_NOTIFICATION_SECRET}
npg.notification.jwt.validity.time=${JWT_NPG_NOTIFICATION_VALIDITY_TIME}

confidentialDataManager.personalDataVault.apiKey=${PERSONAL_DATA_VAULT_API_KEY}
confidentialDataManager.personalDataVault.apiBasePath=${PERSONAL_DATA_VAULT_API_BASE_PATH}

warmup.request.newTransaction.noticeCodePrefix=${WARMUP_REQUEST_NEW_TRANSACTION_NOTICE_CODE_PREFIX:3020}

logo.cardBrandMapping=${LOGO_CARD_BRANDING_MAPPING}
logo.npgPaymentCircuitMapping=${LOGO_NPG_PAYMENT_CIRCUIT_MAPPING}

checkout.basePath=${CHECKOUT_BASE_PATH}
npg.uri=${NPG_URI}
npg.readTimeout=${NPG_READ_TIMEOUT}
npg.connectionTimeout=${NPG_CONNECTION_TIMEOUT}
npg.client.apiKey=${NPG_API_KEY}
npg.authorization.cards.keys=${NPG_CARDS_PSP_KEYS}
npg.authorization.cards.pspList=${NPG_CARDS_PSP_LIST}
npg.authorization.request.timeout.seconds=${NPG_AUTHORIZATION_REQUEST_TIMEOUT_SECONDS}
ecommerce.event.version=${ECOMMERCE_EVENT_VERSION}

ecommerce.send-payment-result-for-tx-expired.enabled=${SEND_PAYMENT_RESULT_FOR_TX_EXPIRED_ENABLED}

sessionUrl.basePath=${SESSION_URL_BASEPATH}
sessionUrl.outcomeSuffix=${SESSION_URL_OUTCOME_SUFFIX}
sessionUrl.cancelSuffix=${SESSION_URL_CANCEL_SUFFIX}
sessionUrl.notificationUrl=${SESSION_URL_NOTIFICATION_URL}
transactionDocument.ttl=${TRANSACTION_DOCUMENT_TTL}


checkout.redirect.pspList=${CHECKOUT_REDIRECT_PSP_LIST}
checkout.redirect.pspUrlMapping=${CHECKOUT_REDIRECT_URL_MAPPING}
checkout.redirect.pspLogoMapping=${CHECKOUT_REDIRECT_LOGO_MAPPING}

node.forwarder.apiKey=${NODE_FORWARDER_API_KEY}
node.forwarder.url=${NODE_FORWARDER_URL}
node.forwarder.readTimeout=${NODE_FORWARDER_READ_TIMEOUT}
node.forwarder.connectionTimeout=${NODE_FORWARDER_CONNECTION_TIMEOUT}

server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s