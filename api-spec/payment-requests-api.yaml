openapi: 3.0.0
info:
  version: 0.1.0
  title: Pagopa eCommerce payment transactions service - payment requests
  description: Api to support payment requests, so verificaRPT and verifyPaymentNotice with nodo
paths:
  /payment-requests/{rpt_id}:
    get:
      operationId: getPaymentRequestInfo
      parameters:
        - in: path
          name: rpt_id
          description: Unique identifier for payment request, so the concatenation of the tax code and notice number.
          schema:
            type: string
            pattern: '([a-zA-Z\d]{1,35})|(RF\d{2}[a-zA-Z\d]{1,21})'
          required: true
      responses:
        '200':
          description: New transaction successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestsGetResponse'
        '400':
          description: Formally invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemJson'
        '404':
          description: Node cannot find the services needed to process this request in its configuration. This error is most likely to occur when submitting a non-existing RPT id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationFaultPaymentProblemJson'
        '409':
          description: Conflict on payment status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatusFaultPaymentProblemJson'
        '502':
          description: PagoPA services are not available or request is rejected by PagoPa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayFaultPaymentProblemJson'
        '503':
          description: EC services are not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyConfigurationFaultPaymentProblemJson'
        '504':
          description: Timeout from PagoPA services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyTimeoutFaultPaymentProblemJson'
components:
  schemas:
    PaymentRequestsGetResponse:
      type: object
      title: PaymentRequestsGetResponse
      description: Respone with payment request information
      properties:
        amount:
          type: integer
          minimum: 0
          maximum: 99999999
        paymentContextCode:
          type: string
          minLength: 32
          maxLength: 32
        reason:
          type: string
          minLength: 1
          maxLength: 140
        PAId:
          type: string
          minLength: 1
          maxLength: 35
        PAName:
          type: string
          minLength: 1
          maxLength: 35
        denominazioneBeneficiario:
          type: string
          minLength: 1
          maxLength: 70
        dueDate:
          type: string
          pattern:  >-
            ([0-9]{4})-(1[0-2]|0[1-9])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])
          example: '2025-07-31'
      required:
        - amount
        - paymentContextCode
        - PAId
    ValidationFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to validation errors.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/FaultCategory'
        detail:
          $ref: '#/components/schemas/ValidationFault'
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      required:
        - category
        - detail
    PaymentStatusFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors related to payment status conflicts.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/FaultCategory'
        detail:
          $ref: '#/components/schemas/PaymentStatusFault'
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      required:
        - category
        - detail
    GatewayFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to Nodo errors.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/FaultCategory'
        detail:
          $ref: '#/components/schemas/GatewayFault'
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      required:
        - category
        - detail
    PartyConfigurationFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to EC fatal errors.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/FaultCategory'
        detail:
          $ref: '#/components/schemas/PartyConfigurationFault'
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      required:
        - category
        - detail
    PartyTimeoutFaultPaymentProblemJson:
      description: |-
        A PaymentProblemJson-like type specific for the GetPayment and ActivatePayment operations.
        Possible values of `detail_v2` are limited to faults pertaining to EC timeouts.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        category:
          $ref: '#/components/schemas/FaultCategory'
        detail:
          $ref: '#/components/schemas/PartyTimeoutFault'
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
      required:
        - category
        - detail
    HttpStatusCode:
      type: integer
      format: int32
      description: |-
        The HTTP status code generated by the origin server for this occurrence
          of the problem.
      minimum: 100
      maximum: 600
      exclusiveMaximum: true
      example: 200
    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: |-
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          $ref: '#/components/schemas/HttpStatusCode'
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
    FaultCategory:
      description: |-
        Fault code categorization for the PagoPA Verifica and Attiva operations.
        Possible categories are:
        - `PAYMENT_DUPLICATED`
        - `PAYMENT_ONGOING`
        - `PAYMENT_EXPIRED`
        - `PAYMENT_UNAVAILABLE`
        - `PAYMENT_UNKNOWN`
        - `DOMAIN_UNKNOWN`
        - `PAYMENT_CANCELED`
        - `GENERIC_ERROR`
      type: string
      x-extensible-enum:
        - PAYMENT_DUPLICATED
        - PAYMENT_ONGOING
        - PAYMENT_EXPIRED
        - PAYMENT_UNAVAILABLE
        - PAYMENT_UNKNOWN
        - DOMAIN_UNKNOWN
        - PAYMENT_CANCELED
        - GENERIC_ERROR
    PaymentStatusFault:
      description: |-
        Fault codes for errors related to payment attempts that cause conflict with the current payment status,
        such as a duplicated payment attempt or a payment attempt made while another attempt is still being processed.
        Should be mapped to 409 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_PAGAMENTO_IN_CORSO`
        - `PAA_PAGAMENTO_IN_CORSO`
        - `PPT_PAGAMENTO_DUPLICATO`
        - `PAA_PAGAMENTO_DUPLICATO`
        - `PAA_PAGAMENTO_SCADUTO`
      type: string
      x-extensible-enum:
        - PPT_PAGAMENTO_IN_CORSO
        - PAA_PAGAMENTO_IN_CORSO
        - PPT_PAGAMENTO_DUPLICATO
        - PAA_PAGAMENTO_DUPLICATO
        - PAA_PAGAMENTO_SCADUTO
    ValidationFault:
      description: |-
        Fault codes for errors related to well-formed requests to ECs not present inside Nodo, should be mapped to 404 HTTP status code.
        Most of the time these are generated when users input a wrong fiscal code or notice number.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PAA_PAGAMENTO_SCONOSCIUTO`
        - `PPT_DOMINIO_SCONOSCIUTO`
        - `PPT_INTERMEDIARIO_PA_SCONOSCIUTO`
        - `PPT_STAZIONE_INT_PA_SCONOSCIUTA`
        - `PAA_PAGAMENTO_ANNULLATO`
      type: string
      x-extensible-enum:
        - PAA_PAGAMENTO_SCONOSCIUTO
        - PPT_DOMINIO_SCONOSCIUTO
        - PPT_INTERMEDIARIO_PA_SCONOSCIUTO
        - PPT_STAZIONE_INT_PA_SCONOSCIUTA
        - PAA_PAGAMENTO_ANNULLATO
    GatewayFault:
      description: |-
        Fault codes for generic downstream services errors, should be mapped to 502 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `GENERIC_ERROR`
        - `PPT_SINTASSI_EXTRAXSD`
        - `PPT_SINTASSI_XSD`
        - `PPT_PSP_SCONOSCIUTO`
        - `PPT_PSP_DISABILITATO`
        - `PPT_INTERMEDIARIO_PSP_SCONOSCIUTO`
        - `PPT_INTERMEDIARIO_PSP_DISABILITATO`
        - `PPT_CANALE_SCONOSCIUTO`
        - `PPT_CANALE_DISABILITATO`
        - `PPT_AUTENTICAZIONE`
        - `PPT_AUTORIZZAZIONE`
        - `PPT_CODIFICA_PSP_SCONOSCIUTA`
        - `PAA_SEMANTICA`
        - `PPT_SEMANTICA`
        - `PPT_SYSTEM_ERROR`
        - `PAA_SYSTEM_ERROR`
      type: string
      x-extensible-enum:
        - GENERIC_ERROR
        - PPT_SINTASSI_EXTRAXSD
        - PPT_SINTASSI_XSD
        - PPT_PSP_SCONOSCIUTO
        - PPT_PSP_DISABILITATO
        - PPT_INTERMEDIARIO_PSP_SCONOSCIUTO
        - PPT_INTERMEDIARIO_PSP_DISABILITATO
        - PPT_CANALE_SCONOSCIUTO
        - PPT_CANALE_DISABILITATO
        - PPT_AUTENTICAZIONE
        - PPT_AUTORIZZAZIONE
        - PPT_CODIFICA_PSP_SCONOSCIUTA
        - PAA_SEMANTICA
        - PPT_SEMANTICA
        - PPT_SYSTEM_ERROR
        - PAA_SYSTEM_ERROR
    PartyConfigurationFault:
      description: |-
        Fault codes for fatal errors from ECs, should be mapped to 503 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_DOMINIO_DISABILITATO`
        - `PPT_INTERMEDIARIO_PA_DISABILITATO`
        - `PPT_STAZIONE_INT_PA_DISABILITATA`
        - `PPT_ERRORE_EMESSO_DA_PAA`
        - `PPT_STAZIONE_INT_PA_ERRORE_RESPONSE`
        - `PPT_IBAN_NON_CENSITO`
        - `PAA_SINTASSI_EXTRAXSD`
        - `PAA_SINTASSI_XSD`
        - `PAA_ID_DOMINIO_ERRATO`
        - `PAA_ID_INTERMEDIARIO_ERRATO`
        - `PAA_STAZIONE_INT_ERRATA`
        - `PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO`
      type: string
      x-extensible-enum:
        - PPT_DOMINIO_DISABILITATO
        - PPT_INTERMEDIARIO_PA_DISABILITATO
        - PPT_STAZIONE_INT_PA_DISABILITATA
        - PPT_ERRORE_EMESSO_DA_PAA
        - PPT_STAZIONE_INT_PA_ERRORE_RESPONSE
        - PPT_IBAN_NON_CENSITO
        - PAA_SINTASSI_EXTRAXSD
        - PAA_SINTASSI_XSD
        - PAA_ID_DOMINIO_ERRATO
        - PAA_ID_INTERMEDIARIO_ERRATO
        - PAA_STAZIONE_INT_ERRATA
        - PAA_ATTIVA_RPT_IMPORTO_NON_VALIDO
    PartyTimeoutFault:
      description: |-
        Fault codes for timeout errors, should be mapped to 504 HTTP status code.
        For further information visit https://docs.pagopa.it/gestionedeglierrori/struttura-degli-errori/fault-code.
        Possible fault codes are:
        - `PPT_STAZIONE_INT_PA_TIMEOUT`
        - `PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE`
        - `PPT_STAZIONE_INT_PA_SERVIZIO_NONATTIVO`
        - `GENERIC_ERROR`
      type: string
      x-extensible-enum:
        - PPT_STAZIONE_INT_PA_TIMEOUT
        - PPT_STAZIONE_INT_PA_IRRAGGIUNGIBILE
        - PPT_STAZIONE_INT_PA_SERVIZIO_NONATTIVO
        - GENERIC_ERROR