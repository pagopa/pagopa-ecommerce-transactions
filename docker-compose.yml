version: "3.9"

services:
  pagopa-ecommerce-transactions:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - pagopa-ecommerce
    env_file: .env

  redis:
    image: redis
    command: ["sh", "-c", 'exec redis-server --requirepass "$$REDIS_PASSWORD"']
    ports:
      - "6379:6379"
    networks:
      - pagopa-ecommerce

  redis-insight:
    image: redislabs/redisinsight
    ports:
      - "8001:8001"
    networks:
      - pagopa-ecommerce

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    networks:
      - pagopa-ecommerce
    healthcheck:
      test: echo "db.stats().ok" | mongo --quiet
      interval: 10s

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    networks:
      - pagopa-ecommerce
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://$MONGO_USERNAME:$MONGO_PASSWORD@mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy

  pagopa-node-mock:
    container_name: pagopa-node-mock
    build:
      context: .
      dockerfile: Dockerfile.nodo-mock
    environment:
      PORT: 3002
      PAGOPA_PROXY_PORT: 3000
      PAGOPA_PROXY_HOST: http://pagopaproxy
      PAGOPA_NODO_HOST: http://pagopa-node-mock
      PAGOPA_ID_CANALE: 97735020584_02
      PAGOPA_ID_CANALE_PAGAMENTO: 97735020584_xx
      PAGOPA_ID_INT_PSP: 97735020584
      PAGOPA_ID_PSP: PAGOPA_01
      PAGOPA_NODO_PASSWORD: password
    ports:
        - 3002:3002
    networks:
      - pagopa-ecommerce    

networks:
  pagopa-ecommerce:
    name: pagopa-ecommerce
